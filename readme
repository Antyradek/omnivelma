  ___                  _           _                 
 / _ \ _ __ ___  _ __ (_)_   _____| |_ __ ___   __ _ 
| | | | '_ ` _ \| '_ \| \ \ / / _ \ | '_ ` _ \ / _` |
| |_| | | | | | | | | | |\ V /  __/ | | | | | | (_| |
 \___/|_| |_| |_|_| |_|_| \_/ \___|_|_| |_| |_|\__,_|
                                                     
Podstawa jezdna dla robota Velma.

Jeżdżąca na 4 kołach szwedzkich podstawa ma za zadanie nosić ciężkiego robota manipulacyjnego Velma.

Jest to temat pracy inżynierskiej dla WEiTI na PW.

Należy zbudować odpowiedni model i oprogramować go do wykonywania zadanych czynności.
Model powinien służyć do testowania na nim programu sterującego.

Wszystko jest pakietami ROSa.
Velmaverse			Świat do symulacji, który importuje roboty z paczek.
Omnivelma			Platforma symulowana fizycznie.
Pseudovelma			Platforma symulowana kinematycznie.
Flooria				Podłoga ze zmiennym współczynnikiem tarcia.
Ocznica				Obserwator liczący odległości od platform.
Transmutator		Translator geometry_msgs/Twist na osobne prędkości kół omnivelma_msgs/Vels.
omnivelma_msgs		Wiadomości i wywołania dla pozostałych modułów.
Lalkarz				Graficzny program sterujący.
Widelnica			Rozdzielacz omnivelma_msgs/Vels na wiele innych topiców.
Vreporter			Połączenie z symulatorem V-Rep.
Vrevelma			Platforma w V-Repie.
Dziadzio			Wyłuskanie prędkości kół z odczytu enkoderów.
Pantifelek			Proty program sterujący

Uruchomienie w ROS:
Stwórz gdzieś jakiś katalog, w którym chcesz uruchomić projekt, będzie to katalog roboczy.
Przenieś tam zawartość katalogu ros/.
$ ./init
To zainicjuje katalog roboczy i skompiluje projekt.
$ ./launch/<scenariusz>
Uruchomi odpowiednią symulację

Symulacje:
launches/gazebo
	Symulacja Omnivelmy i Pseudovelmy w Gazebo
launches/vrep
	Symulacja Vrevelmy w V-Repie
	Zmienna VREP_ROOT musi być ustawiona
	V-Rep musi być uruchomiony z wczytaną sceną vrep/vrevelma.ttt
launches/reencoders
	Pseudovelma jeździ tak, jak pokazują enkodery Omnivelmy
launches/pantofelek
	Omnivelma jeździ sama, sterowana pantofelkiem.

Dla wywoływania akcji jak nadawanie do topicu, wykrywanie działających programów itp. w każdym nowym terminalu wywołaj lokalnie setup:
$ source setup
To ustawi odpowiednie zmienne systemowe, aby komendy wykrywały pakiety i typy.

Aby wysłać wiadomość bezpośrednio, aby ustawić prędkość kół np.:
$ rostopic pub -1 /omnivelma/vels omnivelma_msgs/Vels -- 1 -1 -1 1
(program, komenda, ilość wiadomości, topic, typ, oddzielacz argumentów, wartości struktry)

Aby uruchomić jedynie jedną platformę można zmodyfikować plik src/velmaverse/worlds/omnivelma.world.
Warto zmodyfikować skrypt launch, aby dostosować sieć połączeń do siebie.

Komunikacja:
Pseudovelma:
	/pseudovelma/vels			wejście prędkości kół
	/pseudovelma/pose			wyjście pozycji
	/pseudovelma/twist			aktualna prędkość platformy
Omnivelma:
	/omnivelma/vels				wejście prędkości kół
	/omnivelma/pose				wyjście pozycji
	/omnivelma/encoders			dane enkoderów ze wszystkich kół
	/omnivelma/twist			aktualna prędkość platformy
	/omnivelma/set_friction		ustawienie wartości tarcia rolek
	/omnivelma/set_inertia		ustawienie masy i tensoru dla wszystkich składowych modelu
Ocznica:
	/ocznica/relative			wyjście odległości i kąta między platformami
Flooria:
	/flooria/set_friction		ustaw współczynniki tarcia podłoża
Transmutator:
	/transmutator/twist			wejście do sterowania kierunkiem
	ARG							wyjście prędkości kół do sprecyzowania w argumencie
Widelnica:
	/widelnica/vels				wejście do rozmnożenia
	ARG...						wyjścia podane w argumentach
Lalkarz:
	ARG							wyjście prędkości kół podane w argumencie
	ARG							wyjście kierunku podane w argumencie
	ARG							wejście enkoderów podane w argumencie
Vreporter:
	/vreporter/vels				wejście prędkości kół
Vrevelma:
	/vrevelma/vels				wejście prędkości kół
	/vrevelma/pose				wyjście aktualnej pozycji i rotacji
	/vrevelma/encoders			wyjście aktualnych prędkości i rotacji kół
	/vrevelma/twist				wyjście aktualnej prędkości platformy
Dziadzio:
	INTOPIC						wejście typu omnivelma_msgs/EncodersStamped
	OUTTOPIC					wyjście typu omnivelma_msgs/Vels
Pantofelek:
	TWIST						wyjście typu geometry_msgs/Twist
	SCAN_L						wejście typu sensor_msgs/LaserScan
	SCAN_R						wejście typu sensor_msgs/LaserScan
	

	
