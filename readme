  ___                  _           _                 
 / _ \ _ __ ___  _ __ (_)_   _____| |_ __ ___   __ _ 
| | | | '_ ` _ \| '_ \| \ \ / / _ \ | '_ ` _ \ / _` |
| |_| | | | | | | | | | |\ V /  __/ | | | | | | (_| |
 \___/|_| |_| |_|_| |_|_| \_/ \___|_|_| |_| |_|\__,_|
                                                     
Podstawa jezdna dla robota Velma.

Jeżdżąca na 4 kołach szwedzkich podstawa ma za zadanie nosić ciężkiego robota manipulacyjnego Velma.

Jest to temat pracy inżynierskiej dla WEiTI na PW.

Należy zbudować odpowiedni model i oprogramować go do wykonywania zadanych czynności.
Model powinien służyć do testowania na nim programu sterującego.

Wszystko zostało przerobione na pakiety ROS. Stare wersje uruchamiane bezpośrednio w Gazebo są w gdzieś poprzednich commitach.
Velmaverse - Świat do symulacji, który importuje roboty z paczek.
Omnivelma - Platforma symulowana fizycznie.
Pseudovelma - Platforma symulowana kinematycznie.
Flooria - Podłoga ze zmiennym współczynnikiem tarcia.
Ocznica - Obserwator liczący odległości od platform.
Transmutator - Translator geometry_msgs/Twist na osobne prędkości kół.


Uruchomienie w ROS:
Stwórz gdzieś jakiś katalog, w którym chcesz uruchomić projekt, będzie to katalog roboczy.
Przenieś tam zawartość katalogu ros/.
$ ./init
To zainicjuje katalog roboczy i skompiluje projekt.
$ ./launch
Uruchomi Gazebo z platformami, oraz Transmutator.

Potem dla wywoływania akcji jak nadawanie do topicu, wykrywanie działających programów itp. w każdym nowym terminalu wywołaj lokalnie setup:
$ source setup
To ustawi odpowiednie zmienne systemowe, aby komendy wykrywały pakiety i typy.

Sterowanie:
Program wystawi interfejs /omnivelma/vels o typie omnivelma/Vels, który składa się z 4 double dla każdego koła.
Argumenty w kolejności: Przedni Prawy, Przedni Lewy, Tylny Lewy, Tylny Prawy.
Można łatwo (acz niepełnie) sterować za pomocą wtyczki RQT podłączonej do transmutatora.

Aby wysłać wiadomość, aby ustawić prędkość kół np.:
$ rostopic pub -1 /omnivelma/vels omnivelma/Vels -- 1 -1 -1 1
(program, komenda, ilość wiadomości, topic, typ, oddzielacz argumentów, wartości struktry)

Program helper pomaga wysyłać wiadomości powyższą komendą:
./helper -o 1 -1 1 -1
Ustawienie prędkości kół (obrót w prawo) dla Omnivelmy (dynamicznej).
./helper -b 1 -1 -1 1
Ustawienie prędkości kół (jazda w prawo) dla obu platform na raz.
./helper -p 1 0 0 1
Ustawienie prędkości kół (jazda na skos prosto w prawo) dla Pseudovelmy (kinematycznej).

Gazebo nie wymaga działającego w tle roscore, ponieważ uruchamia wewnętrznie swój własny.

Aby uruchomić jedynie jedną platformę można zmodyfikować plik src/velmaverse/worlds/omnivelma.world.

Komunikacja:
Pseudovelma:
	/pseudovelma/vels			wejście prędkości kół
	/pseudovelma/pose			wyjście pozycji
Omnivelma:
	/omnivelma/vels				wejście prędkości kół
	/omnivelma/pose				wyjście pozycji
	/omnivelma/encoders			dane enkoderów ze wszystkich kół
	/omnivelma/set_friction		ustawienie wartości tarcia rolek
	/omnivelma/set_inertia		ustawienie masy i tensoru dla wszystkich składowych modelu
Ocznica:
	/ocznica/relative			wyjście odległości i kąta między platformami
Flooria:
	/flooria/set_friction		ustaw współczynniki tarcia podłoża
Transmutator:
	/transmutator/twist			wejście do łatwego sterowania
	/omnivelma/vels				prędkości kół wysyłane do Omnivelmy
	/pseudovelma/vels			prędkości kłó wysyłane do Pseudovelmy

	